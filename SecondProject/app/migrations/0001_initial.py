# Generated by Django 5.2.3 on 2025-07-02 12:11

import app.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bb",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        blank=True,
                        choices=[("b", "buy"), ("s", "sell"), ("t", "trade")],
                        max_length=1,
                    ),
                ),
                (
                    "kind2",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "Choose type of published announcement"),
                            ("b", "Buy"),
                            ("s", "Sell"),
                            ("t", "Trade"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "kind3",
                    models.SmallIntegerField(
                        choices=[(1, "Buy"), (2, "Sell"), (3, "Trade")], default=2
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Measure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measurement",
                    models.FloatField(
                        choices=[(1.0, "METERS"), (0.3048, "FEET"), (0.9144, "YARDS")]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rubric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("show", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "rubric",
            },
        ),
        migrations.CreateModel(
            name="Spare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="AdvUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_activated", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rubric",
                    models.ForeignKey(
                        limit_choices_to={"show": True},
                        on_delete=models.SET(app.models.Rubric.get_first_rubric),
                        related_name="+",
                        related_query_name="entry",
                        to="app.rubric",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Machine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("spares", models.ManyToManyField(to="app.spare")),
            ],
        ),
        migrations.CreateModel(
            name="Magazine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=30)),
                ("published", models.DateTimeField(auto_now_add=True)),
                ("price", models.FloatField(default=0)),
                (
                    "rubric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="app.rubric"
                    ),
                ),
            ],
            options={
                "ordering": ["-published", "title"],
                "get_latest_by": "published",
                "indexes": [
                    models.Index(
                        condition=models.Q(("price__lte", 1000)),
                        fields=["title"],
                        name="app_magazine_main",
                    )
                ],
                "unique_together": {("title", "price"), ("title", "published")},
            },
        ),
    ]
