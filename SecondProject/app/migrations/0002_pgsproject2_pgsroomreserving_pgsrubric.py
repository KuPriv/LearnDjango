# Generated by Django 5.2.3 on 2025-09-18 19:12

import django.contrib.postgres.constraints
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.indexes
from django.contrib.postgres.operations import CreateExtension, BtreeGistExtension
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0001_initial"),
    ]

    operations = [
        CreateExtension(name="hstore"),
        BtreeGistExtension(),
        migrations.CreateModel(
            name="PGSProject2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40, verbose_name="Название")),
                (
                    "platforms",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        verbose_name="Использование платформы"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PGSRoomReserving",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="Помещение")),
                (
                    "reserving",
                    django.contrib.postgres.fields.ranges.DateTimeRangeField(
                        verbose_name="Время резервирования"
                    ),
                ),
                (
                    "cancelled",
                    models.BooleanField(
                        default=False, verbose_name="Отменить резервирование"
                    ),
                ),
            ],
            options={
                "indexes": [
                    django.contrib.postgres.indexes.GistIndex(
                        fields=["name", "reserving"],
                        fillfactor=50,
                        name="i_pgsrr_reserving",
                        opclasses=("gist_trgm_ops", "range_ops"),
                    )
                ],
                "constraints": [
                    django.contrib.postgres.constraints.ExclusionConstraint(
                        condition=models.Q(("cancelled", False)),
                        expressions=[("name", "="), ("reserving", "=")],
                        name="c_pgsrr_reserving",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PGSRubric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="Имя")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20),
                        size=None,
                        verbose_name="Теги",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["name", "description"],
                        name="i_pgsrubric_name_description",
                        opclasses=("gist_trgm_ops", "gist_trgm_ops"),
                    )
                ],
                "constraints": [
                    django.contrib.postgres.constraints.ExclusionConstraint(
                        expressions=[("name", "="), ("description", "=")],
                        name="c_pgsrubric_name_description",
                    )
                ],
            },
        ),
    ]
